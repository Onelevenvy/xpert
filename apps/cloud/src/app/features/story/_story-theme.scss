@use 'sass:map';
@use '@angular/material' as mat;

$toolbar-height: 50px;
$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1);

@mixin color($theme) {
  $config: mat.get-color-config($theme);

  $primary-palette: map.get($config, 'primary');
  $accent-palette: map.get($config, 'accent');
  $background: map.get($config, background);
  $foreground: map.get($config, foreground);

  // Story widget page
  .ngm-story-widget.pac-story-widget-viewer {
    background-color: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
  }
  // Story point page
  .pac-story-point-viewer {
    background-color: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
  }

  .pac-story-viewer {
    background-color: mat.get-color-from-palette($background, background);
    .pac-story-viewer__anchor {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      box-shadow: rgb(99 99 99 / 20%) 0px 2px 8px 0px;
      opacity: 0.5;
      &:hover {
        opacity: 1;
      }
    }
  }

  .pac-story-designer__copilot-popper {
    .ngxp__arrow {
      right: 100px;
    }
  }

  .ngm-story-designer {
    --story-fullscreen-top: 0;
    background-color: mat.get-color-from-palette($background, background);

    // @include ngm-story-toolbar($theme);
    // &:not(.ngm-story--fullscreen) {
    //   @include ngm-story-toolbar__not-fullscreen($theme);
    // }

    /**
     * 
     */
    .mat-button,
    .mat-mdc-icon-button,
    .mat-stroked-button,
    .mat-flat-button {
      min-width: unset;
    }

    .ngm-story-primary--add {
      position: absolute;
      bottom: 2rem;
      right: 2rem;
      z-index: 1;
    }

    &.ngm-story--fullscreen {
      .ngm-story__container {
        position: fixed;
        width: 100%;
        top: var(--story-fullscreen-top);
        height: 100%;
        transition: all 500ms $ease-in-out-curve-function;
      }
      .ngm-story__toolbar {
        opacity: 0;
        transition: all 500ms $ease-in-out-curve-function;

        &:hover {
          opacity: 1;
          top: 0;
        }
      }
    }

    .ngm-story__container {
      .ngm-story__device-size-bar {
        .layout-size {
          background-color: mat.get-color-from-palette($foreground, divider);
          border-color: lightgrey;
        }
      }
    }
  }

  // Story designer pannel
  .mat-drawer.ngm-story__designer-drawer {
    &.mat-elevation-z8 {
      border: unset;
      max-width: 100%;
    }

    .mat-drawer-inner-container {
      display: flex;
      flex-direction: column;
    }
  }

  .cdk-menu.cdk-menu-group {
    @apply inline-flex flex-col rounded-lg py-2 shadow-lg outline-none overflow-auto;
    min-width: 112px;
    max-width: 280px;
    -webkit-overflow-scrolling: touch;
    max-height: calc(100vh - 48px);
    min-height: 64px;
    background: mat.get-color-from-palette($background, 'card');

    .cdk-menu-item {
      @apply flex-1 flex items-center bg-transparent cursor-pointer border-none rounded-none select-none px-4;

      color: mat.get-color-from-palette($foreground, 'icon');;
      min-width: 64px;
      line-height: 36px;

      &:hover {
        background: mat.get-color-from-palette($background, 'hover');
      }

      &.ngm-cdk-menu__danger:hover {
        @apply bg-red-400 text-white;
      }

      & > .mat-icon {
        margin-right: 10px;
      }

      &.disabled, &.mat-button-disabled {
        @apply opacity-50 cursor-default;
      }

      .mat-button-wrapper {
        @apply w-full flex items-center;

        > .mat-icon:is(:first-child) {
          margin-right: 10px;
        }
      }
    }
  }
}

@mixin typography($theme) {
}

@mixin density($config-or-theme) {
  .pac-story-designer {
    formly-field {
      font-size: 12px;
    }
    .metad-formly__panel-wrapper {
      margin: 0;
      .metad-formly__title {
        @apply text-base;
      }
    }
  }
}

@mixin theme($theme) {
  $color: mat.get-color-config($theme);
  $density: mat.get-density-config($theme);
  $typography: mat.get-typography-config($theme);

  @if $color != null {
    @include color($color);
  }
  @if $density != null {
    @include density($density);
  }
  @if $typography != null {
    @include typography($typography);
  }
}
