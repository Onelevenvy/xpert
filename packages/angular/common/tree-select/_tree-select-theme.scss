@use 'sass:map';
@use 'sass:color';
@use '@angular/material' as mat;

@mixin color($config-or-theme) {
  $config: mat.get-color-config($config-or-theme);
  $primary: map.get($config, 'primary');
  $accent: map.get($config, accent);
  $background: map.get($config, background);

  .ngm-tree-select__panel.mat-mdc-select-panel,
  .ngm-tree-select__panel.mat-mdc-autocomplete-panel {
    &:not(.multiple) {
      .mat-mdc-option.mat-selected:not(.mat-active):not(:hover) {
        color: mat.get-color-from-palette($accent);
        background-color: lighten(mat.get-color-from-palette($background, hover), 50%);
      }
    }
  }

  .ngm-tree-select__panel.cdk-tree {
    background-color: transparent;

    .cdk-tree-node {
      padding-right: 10px;
    }

    &.selection {
      .cdk-tree-node {
        cursor: pointer;

        &:hover,
        &:focus {
          background-color: color.change(mat.get-color-from-palette($background, hover), $alpha: 0.03);
          // color: mat.get-color-from-palette($primary);
        }

        &.selected {
          background-color: color.change(mat.get-color-from-palette($background, hover), $alpha: 0.05);
          // color: mat.get-color-from-palette($background,);
        }
      }
    }
  }

  .ngm-tree-select {
    &.mat-accent {
      .cdk-tree.selection {
        .mat-icon-rtl-mirror {
          color: color.change(mat.get-color-from-palette($accent), $alpha: 0.3);
        }
        .cdk-tree-node {
          &:hover,
          &:focus {
            background-color: color.change(mat.get-color-from-palette($accent), $alpha: 0.03);
            color: mat.get-color-from-palette($accent);
          }

          &.selected {
            background-color: color.change(mat.get-color-from-palette($accent), $alpha: 0.05);
            color: mat.get-color-from-palette($accent);
          }
        }
      }
    }

    &.mat-primary {
      .cdk-tree.selection {
        .mat-icon-rtl-mirror {
          color: color.change(mat.get-color-from-palette($primary), $alpha: 0.3);
        }
        .cdk-tree-node {
          &:hover,
          &:focus {
            background-color: color.change(mat.get-color-from-palette($primary), $alpha: 0.03);
            color: mat.get-color-from-palette($primary);
          }

          &.selected {
            background-color: color.change(mat.get-color-from-palette($primary), $alpha: 0.05);
            color: mat.get-color-from-palette($primary);
          }
        }
      }
    }

    .mat-chip-list {
      .mat-chip-list-wrapper {
        max-width: 100%;
      }
    }

    input.mat-chip-input {
      width: 50px;
      flex: 1 0 50px;
    }
  }

  .ngm-tree-select__panel {
    .mat-mdc-option:not(.mat-mdc-option-multiple) {
      padding-left: 0;
    }
  }
}

@mixin density($config-or-theme) {
  .ngm-density__cosy.ngm-tree-select,
  .ngm-density__cosy .ngm-tree-select {
    @include mat.form-field-density(-3);
  }
  .ngm-density__compact.ngm-tree-select,
  .ngm-density__compact .ngm-tree-select {
    @include mat.form-field-density(-5);
  }

  .ngm-tree-select__panel.mat-mdc-select-panel,
  .ngm-tree-select__panel.mat-mdc-autocomplete-panel {
    .mat-mdc-option .mdc-list-item__primary-text {
      width: 100%;
      display: flex;
    }

    .mat-mdc-checkbox {
      display: flex;
      .mdc-form-field {
        flex: 1;
        .mdc-label {
          flex: 1;
        }
      }
    }

    .mat-mdc-option {
      .mat-mdc-icon-button {
        .mat-icon {
          margin: 0;
        }
      }

      .mat-mdc-option-text {
        overflow: visible;
      }

      &.ngm-tree-select__option-toolbar {
        padding-right: 0;
        height: 4em;
        line-height: 4em;
      }
      &.ngm-tree-select__selected-option {
        padding-left: 1em;
      }
    }
    .mat-mdc-option .mat-pseudo-checkbox-full {
      margin-right: 0;
    }
  }

  .ngm-tree-select__panel.cdk-tree {
    &.ngm-density__cosy {
      .mat-tree-node {
        min-height: 34px;
      }
    }
    &.ngm-density__compact {
      .mat-tree-node {
        min-height: 28px;
        font-size: 12px;
      }
    }
  }
}
