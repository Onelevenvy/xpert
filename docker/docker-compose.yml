name: xpert-ai

services:
  db:
    image: pgvector/pgvector:pg12
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-root}
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1'
        ]
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
      - ./.scripts/initdb.d/:/docker-entrypoint-initdb.d/:ro
    networks:
      - default

  redis:
    image: redis/redis-stack:latest
    restart: always
    command: ["sh", "-c", "redis-server --requirepass $${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    networks:
      - default

  # OLAP Services
  olap:
    image: ghcr.io/xpert-ai/ocap-olap:latest
    profiles:
      - bi
    mem_limit: 1024m
    restart: unless-stopped
    healthcheck:
      test: curl -m 5 --silent --fail --request GET http://localhost:8080/ | jq --exit-status -n 'inputs | if has("status") then .status=="UP" else false end' > /dev/null || exit 1
      interval: 10s
      timeout: 2s
      retries: 10
    links:
      - db:${DB_HOST:-db}
    depends_on:
      - api
    environment:
      REDIS_DATABASE: 1
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    networks:
      - default

  api:
    image: ghcr.io/xpert-ai/xpert-api:latest
    environment:
      HOST: ${API_HOST:-api}
      PORT: ${API_PORT:-3000}
      NODE_ENV: ${NODE_ENV:-development}
      DB_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OLAP_HOST: olap
      OLAP_PORT: 8080
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      SENTRY_DSN: ${SENTRY_DSN:-}
    env_file:
      - .env
    command: ['node', 'main.js']
    restart: on-failure
    depends_on:
      - db
      - redis
    links:
      - db:${DB_HOST:-db}
    ports:
      - '3000:${API_PORT:-3000}'
    volumes:
      - ./volumes/api/public:/srv/pangolin/public
    networks:
      - default

  webapp:
    image: ghcr.io/xpert-ai/xpert-webapp:latest
    environment:
      HOST: ${WEB_HOST:-webapp}
      NODE_ENV: ${NODE_ENV:-development}
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      CLIENT_BASE_URL: ${CLIENT_BASE_URL:-http://localhost:4200}
      SENTRY_DSN: ${SENTRY_DSN:-}
      DEFAULT_LATITUDE: ${DEFAULT_LATITUDE:-42.6459136}
      DEFAULT_LONGITUDE: ${DEFAULT_LONGITUDE:-23.3332736}
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-USD}
      API_HOST: ${API_HOST:-api}
      API_PORT: ${API_PORT:-3000}
      ENABLE_LOCAL_AGENT: false
    entrypoint: './entrypoint.compose.sh'
    command: ['nginx', '-g', 'daemon off;']
    env_file:
      - .env
    restart: on-failure
    links:
      - api:${API_HOST:-api}
    depends_on:
      - api
    ports:
      - ${WEB_PORT:-80}:80
      # - 443:443
    volumes:
      - ./volumes/webapp/:/webapp/
    networks:
      - default

networks:
  overlay:
    driver: bridge