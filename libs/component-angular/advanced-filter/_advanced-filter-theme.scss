@use 'sass:map';
@use 'sass:color';
@use '@angular/material' as mat;

@mixin color($config-or-theme) {
  $config: mat.get-color-config($config-or-theme);
  $background: map.get($config, background);
  $foreground: map.get($config, foreground);
  $primary: map.get($config, primary);
  $accent: map.get($config, accent);

  .ngm-advanced-filter {

    .pac-filter-tree__line {
      width: 0.5rem;
      min-width: 0.5rem;
      margin-right: .5rem;
      outline-style: none;
      border-radius: 0.25rem;
      cursor: pointer;
    }

    .pac-filter-tree__line--and {
      background: mat.get-color-from-palette($primary, 200);

      &-selected {
        background: mat.get-color-from-palette($primary, 300);
      }

      &:focus {
        box-shadow: inset 0 0 0 2px mat.get-color-from-palette($primary, 300);
      }
    }

    .pac-filter-tree__line--or {
      background: mat.get-color-from-palette($accent, 200);

      &-selected {
        background-color: mat.get-color-from-palette($accent, 300);
      }

      &:focus {
        box-shadow: inset 0 0 0 2px mat.get-color-from-palette($accent, 300);
      }
    }

    .pac-filter-tree__inputs-actions {
      display: flex;
      align-items: center;
    }

    .pac-filter-tree__buttons {
      margin-top: .5rem;
    }

    .pac-filter-tree__expression-item {
      display: flex;
      align-items: center;
    }

    .pac-filter-tree, .pac-filter-tree__expression-item {
      + .pac-filter-tree,
      + .pac-filter-tree__inputs,
      + .pac-filter-tree__expression-item {
        margin-top: .5rem;
      }
    }

    .pac-filter-tree__expression-column, .pac-filter-tree__expression-condition {
      margin-right: .5rem;
    }

    .pac-filter-legend__item {
      position: relative;
      display: inline-flex;
      align-items: center;
      font-size: .75rem;

      &::before {
        content: '';
        width: 1.75rem;
        height: 1.75rem;
        // background: white;
        border-radius: 0.25rem;
        margin-right: 0.5rem;
      }

      + .pac-filter-legend__item {
        margin-left: 1.75rem;
      }
    }

    .pac-filter-legend__item--and::before {
      background: mat.get-color-from-palette($primary, 300);
    }

    .pac-filter-legend__item--or::before {
      background: mat.get-color-from-palette($accent, 300);
    }
  }
}

@mixin typography($config-or-theme) {
}

@mixin density($config-or-theme) {
  .ngm-advanced-filter {
    .pac-filter-tree {
      margin-top: .5rem;
    }

    .pac-filter-tree__inputs-actions {
      margin: 0 .5rem;
    }
  }

}

@mixin theme($theme) {
  $color: mat.get-color-config($theme);
  $density: mat.get-density-config($theme);
  $typography: mat.get-typography-config($theme);

  @if $color != null {
    @include color($color);
  }
  @if $density != null {
    @include density($density);
  }
  @if $typography != null {
    @include typography($typography);
  }
}
